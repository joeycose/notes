#==============================================================================
 #   Assignment:  Milestone 1
 #
 #       Author:  Giuseppe Cosentino
 #     Language:  Python3
 #   To Compile:  Interpreted, not compiled.
 #
 #        Classes:  Professor Harvey Kaduri - DPI912 Python: Sockets and Security.
 #    Professor:  Professor Harvey Kaduri
 #     Due Date:  May 26, 2023
 #    Submitted:  May 26, 2023.
 #
 #-----------------------------------------------------------------------------
 #
 #  Description:  This program is designed to solve the problem of generating
 #                lottery tickets on-demand over a TCP/IP network. It
 #                comprises a series of four different prototypes that
 #                progressively add features and complexity.
 #
 #
 #        Input:  Server: Different prototypes may require input such as IPv4/IPv6
 #                      addresses and port number. Additional input includes ticket
 #                      type and, for some prototypes, the number of tickets requested.
 #                Client: Requires command-line arguments for some prototypes, such as
 #                      IPv4/IPv6 addresses, port number, ticket type, and number of
 #                      tickets requested. In other prototypes, arguments may be hardcoded.
 #
 #       Output:  For each requested ticket, a stream of data is generated, comprising
 #                      the lottery ticket type and randomly selected numbers. This
 #                      data is then sent from the server to the client over the network
 #                      and written to stdout.
 #
 #    Algorithm:  1. Server sets up a listening socket (IPv4 or IPv6 pending prototype)
 #                2. Client connects to the server and sends a request for the desired
 #                      lottery ticket type and quantity.
 #                3. Server processes the request and generates the required tickets.
 #                4. Server sends the generated ticket data back to the client.
 #                5. Client receives the ticket data and writes it to stdout.
 #
 #   Required Features Not Included:  None.
 #
 #   Known Bugs:  None.
 #
 #   Classification: Applicable to prototypes A, B, C, and D.
 #
#==============================================================================
